"""add youtube_chunks table with pgvector support

Revision ID: ede2469b7093
Revises: 0c3c1d36c18d
Create Date: 2025-06-15 07:37:11.894792

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector.sqlalchemy


# revision identifiers, used by Alembic.
revision: str = 'ede2469b7093'
down_revision: Union[str, None] = '0c3c1d36c18d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Enable pgvector extension if not already enabled
    op.execute('CREATE EXTENSION IF NOT EXISTS vector')
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('youtube_chunks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_slug', sa.String(length=255), nullable=False),
    sa.Column('video_id', sa.String(length=255), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('start_timestamp', sa.REAL(), nullable=False),
    sa.Column('end_timestamp', sa.REAL(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('word_count', sa.Integer(), nullable=False),
    sa.Column('sentence_count', sa.Integer(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1024), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_youtube_chunks_project_slug'), 'youtube_chunks', ['project_slug'], unique=False)
    
    # Create vector similarity search indexes
    # HNSW index for cosine similarity (recommended for embeddings)
    op.execute("""
        CREATE INDEX idx_youtube_chunks_embedding_cosine 
        ON youtube_chunks USING hnsw (embedding vector_cosine_ops)
    """)
    
    # IVFFlat index for L2 distance  
    op.execute("""
        CREATE INDEX idx_youtube_chunks_embedding_l2 
        ON youtube_chunks USING ivfflat (embedding vector_l2_ops)
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop vector indexes first
    op.execute('DROP INDEX IF EXISTS idx_youtube_chunks_embedding_cosine')
    op.execute('DROP INDEX IF EXISTS idx_youtube_chunks_embedding_l2')
    
    op.drop_index(op.f('ix_youtube_chunks_project_slug'), table_name='youtube_chunks')
    op.drop_table('youtube_chunks')
    # ### end Alembic commands ###